{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShopService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7068/api/Shops/';\n  }\n  getShopsService(pageNumber, pageSize, searchTerm, selectedCountries) {\n    return this.http.get(`${this.apiUrl}?pageNumber=${pageNumber}&pageSize=${pageSize}&searchTerm=${searchTerm}&${selectedCountries?.map(country => `enumCountry=${country}`).join('&')}`);\n  }\n  getShopForProduct() {\n    return this.http.get(`${this.apiUrl}GetAllShopsForProduct`);\n  }\n  postShopService(shop) {\n    return this.http.post(this.apiUrl, shop);\n  }\n  deleteShopService(shopId) {\n    return this.http.delete(`${this.apiUrl}${shopId}`);\n  }\n  updateShopService(shopId, updatedShop) {\n    const startDate = new Date(updatedShop.startDate);\n    const timezoneOffset = startDate.getTimezoneOffset();\n    startDate.setMinutes(startDate.getMinutes() - timezoneOffset);\n    const formattedStartDate = startDate.toISOString();\n    return this.http.put(`${this.apiUrl}${shopId}`, {\n      ...updatedShop,\n      startDate: formattedStartDate\n    });\n  }\n}\n_class = ShopService;\n_class.ɵfac = function ShopService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,mCAAmC;EAEb;EAEvCC,eAAe,CACbC,UAAmB,EACnBC,QAAiB,EACjBC,UAAmB,EACnBC,iBAA4B;IAE5B,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAClB,GACE,IAAI,CAACC,MACP,eAAeL,UAAU,aAAaC,QAAQ,eAAeC,UAAU,IAAIC,iBAAiB,EACxFG,GAAG,CAAEC,OAAO,IAAK,eAAeA,OAAO,EAAE,CAAC,CAC3CC,IAAI,CAAC,GAAG,CAAC,EAAE,CACf;EACH;EAEAC,iBAAiB;IACf,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACC,MAAM,uBAAuB,CAAC;EACrE;EAEAK,eAAe,CAACC,IAAgB;IAC9B,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAa,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EACtD;EAEAE,iBAAiB,CAACC,MAAc;IAC9B,OAAO,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAS,GAAG,IAAI,CAACV,MAAM,GAAGS,MAAM,EAAE,CAAC;EAC5D;EAEAE,iBAAiB,CACfF,MAAc,EACdG,WAAuB;IAEvB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACC,SAAS,CAAC;IACjD,MAAME,cAAc,GAAGF,SAAS,CAACG,iBAAiB,EAAE;IACpDH,SAAS,CAACI,UAAU,CAACJ,SAAS,CAACK,UAAU,EAAE,GAAGH,cAAc,CAAC;IAC7D,MAAMI,kBAAkB,GAAGN,SAAS,CAACO,WAAW,EAAE;IAClD,OAAO,IAAI,CAAC3B,IAAI,CAAC4B,GAAG,CAAa,GAAG,IAAI,CAACrB,MAAM,GAAGS,MAAM,EAAE,EAAE;MAC1D,GAAGG,WAAW;MACdC,SAAS,EAAEM;KACZ,CAAC;EACJ;;SA5CW5B,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAA+B,SAAX/B,MAAW;EAAAgC,YAFV;AAAM","names":["ShopService","constructor","http","getShopsService","pageNumber","pageSize","searchTerm","selectedCountries","get","apiUrl","map","country","join","getShopForProduct","postShopService","shop","post","deleteShopService","shopId","delete","updateShopService","updatedShop","startDate","Date","timezoneOffset","getTimezoneOffset","setMinutes","getMinutes","formattedStartDate","toISOString","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\services\\shop.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Shop } from '../models/shop';\r\nimport { Observable } from 'rxjs';\r\nimport { ShopCreate } from '../models/shop-create';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShopService {\r\n  private apiUrl = 'https://localhost:7068/api/Shops/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getShopsService(\r\n    pageNumber?: number,\r\n    pageSize?: number,\r\n    searchTerm?: string,\r\n    selectedCountries?: number[]\r\n  ): Observable<Shop[]> {\r\n    return this.http.get<Shop[]>(\r\n      `${\r\n        this.apiUrl\r\n      }?pageNumber=${pageNumber}&pageSize=${pageSize}&searchTerm=${searchTerm}&${selectedCountries\r\n        ?.map((country) => `enumCountry=${country}`)\r\n        .join('&')}`\r\n    );\r\n  }\r\n\r\n  getShopForProduct(): Observable<Shop[]> {\r\n    return this.http.get<Shop[]>(`${this.apiUrl}GetAllShopsForProduct`);\r\n  }\r\n\r\n  postShopService(shop: ShopCreate): Observable<ShopCreate> {\r\n    return this.http.post<ShopCreate>(this.apiUrl, shop);\r\n  }\r\n\r\n  deleteShopService(shopId: number): Observable<number> {\r\n    return this.http.delete<number>(`${this.apiUrl}${shopId}`);\r\n  }\r\n\r\n  updateShopService(\r\n    shopId: number,\r\n    updatedShop: ShopCreate\r\n  ): Observable<ShopCreate> {\r\n    const startDate = new Date(updatedShop.startDate);\r\n    const timezoneOffset = startDate.getTimezoneOffset();\r\n    startDate.setMinutes(startDate.getMinutes() - timezoneOffset);\r\n    const formattedStartDate = startDate.toISOString();\r\n    return this.http.put<ShopCreate>(`${this.apiUrl}${shopId}`, {\r\n      ...updatedShop,\r\n      startDate: formattedStartDate,\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
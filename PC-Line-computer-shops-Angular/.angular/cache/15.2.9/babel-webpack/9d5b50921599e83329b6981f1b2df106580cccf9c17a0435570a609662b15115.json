{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/employee.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nfunction EmployeeFormComponent_mat_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const position_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", position_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", position_r1.nameOfposition, \" \");\n  }\n}\nexport class EmployeeFormComponent {\n  constructor(employeeService, fb, dialogRef, shopId) {\n    this.employeeService = employeeService;\n    this.fb = fb;\n    this.dialogRef = dialogRef;\n    this.shopId = shopId;\n    this.title = \"Add Eemployee\";\n    this.employeePosition = [{\n      value: EmployeePosition.Menager,\n      nameOfposition: 'Menager'\n    }, {\n      value: EmployeePosition.Seller,\n      nameOfposition: 'Seller'\n    }, {\n      value: EmployeePosition.Technician,\n      nameOfposition: 'Technician'\n    }, {\n      value: EmployeePosition.OfficeWorker,\n      nameOfposition: 'Office Worker'\n    }, {\n      value: EmployeePosition.Driver,\n      nameOfposition: 'Driver'\n    }];\n    this.employeeForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      salary: [null, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      employeePosition: ['', Validators.required]\n    });\n  }\n  submit(employee) {\n    this.employeeService.postEmployeeForShopService(this.shopId, employee).subscribe(() => {\n      this.dialogRef.close();\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n}\n_class = EmployeeFormComponent;\n_class.ɵfac = function EmployeeFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-employee-form\"]],\n  decls: 37,\n  vars: 4,\n  consts: [[1, \"d-flex\", \"justify-content-between\", \"p-2\"], [\"mat-dialog-close\", \"\", 1, \"bi\", \"bi-x-circle\", 2, \"font-size\", \"1.5rem\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"p-3\", \"m-0\", \"border-0\", \"m-0\", \"border-0\"], [1, \"mb-3\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"salary\", \"type\", \"number\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"formControlName\", \"employeePosition\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-end\", \"p-2\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 2, \"margin-right\", \"8px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function EmployeeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"i\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EmployeeFormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit(ctx.employeeForm.value);\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"mat-form-field\", 5)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"mat-form-field\", 5)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"mat-form-field\", 5)(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Salary:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"mat-form-field\", 5)(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"mat-form-field\", 5)(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Employee Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-select\", 10);\n      i0.ɵɵtemplate(31, EmployeeFormComponent_mat_option_31_Template, 2, 2, \"mat-option\", 11);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(32, \"div\", 12)(33, \"button\", 13);\n      i0.ɵɵtext(34, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 14);\n      i0.ɵɵtext(36, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeePosition);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.employeeForm.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i3.MatDialogClose, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.MatButton, i8.MatSelect, i9.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","EmployeePosition","i0","EmployeeFormComponent","constructor","employeeService","fb","dialogRef","shopId","value","Menager","nameOfposition","Seller","Technician","OfficeWorker","Driver","employeeForm","group","firstName","required","lastName","salary","email","employeePosition","submit","employee","postEmployeeForShopService","subscribe","close","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\employee-form\\employee-form.component.ts","D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\employee-form\\employee-form.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\r\nimport { Employee } from 'src/app/models/employee';\r\nimport { EmployeeCreate } from 'src/app/models/employee-create';\r\nimport { EmployeeService } from 'src/app/services/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-form',\r\n  templateUrl: './employee-form.component.html',\r\n  styleUrls: ['./employee-form.component.scss']\r\n})\r\nexport class EmployeeFormComponent {\r\n\r\n  title = \"Add Eemployee\"\r\n\r\n  employeeForm: FormGroup;\r\n\r\n  employeePosition: { value: number; nameOfposition: string }[] = [\r\n    { value: EmployeePosition.Menager, nameOfposition: 'Menager' },\r\n    { value: EmployeePosition.Seller, nameOfposition: 'Seller' },\r\n    { value: EmployeePosition.Technician, nameOfposition: 'Technician' },\r\n    { value: EmployeePosition.OfficeWorker, nameOfposition: 'Office Worker' },\r\n    { value: EmployeePosition.Driver, nameOfposition: 'Driver' }\r\n  ];\r\n\r\n  constructor(private employeeService: EmployeeService, private fb: FormBuilder, private dialogRef: MatDialogRef<EmployeeFormComponent>, @Inject(MAT_DIALOG_DATA) public shopId: number) {\r\n    this.employeeForm = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      salary: [null, Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      employeePosition: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  submit(employee: EmployeeCreate) {\r\n    this.employeeService.postEmployeeForShopService(this.shopId, employee).subscribe(\r\n      () => {\r\n        this.dialogRef.close();\r\n      },\r\n      error => {\r\n        console.error('Error:', error);\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-between p-2\">\r\n  <h2>{{ title }}</h2>\r\n  <i class=\"bi bi-x-circle\" style=\"font-size: 1.5rem\" mat-dialog-close></i>\r\n</div>\r\n<form [formGroup]=\"employeeForm\" (ngSubmit)=\"submit(employeeForm.value)\">\r\n  <div class=\"p-3 m-0 border-0 m-0 border-0\">\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>First Name:</mat-label>\r\n        <input matInput formControlName=\"firstName\" required />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Last Name:</mat-label>\r\n        <input matInput formControlName=\"lastName\" required />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Salary:</mat-label>\r\n        <input matInput formControlName=\"salary\" type=\"number\" required />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email:</mat-label>\r\n        <input matInput formControlName=\"email\" required />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Employee Position</mat-label>\r\n        <mat-select formControlName=\"employeePosition\" required>\r\n          <mat-option\r\n            *ngFor=\"let position of employeePosition\"\r\n            [value]=\"position.value\"\r\n          >\r\n            {{ position.nameOfposition }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex justify-content-end p-2\">\r\n    <button style=\"margin-right: 8px\" mat-raised-button mat-dialog-close>\r\n      Cancel\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      [disabled]=\"employeeForm.invalid\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { TaskStatus } from 'src/app/enums/taskStatus';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/taskemployee.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/services/employee.service\";\nimport * as i5 from \"@angular/material/datepicker\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction TaskemployeesFormComponent_mat_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r3.name, \" \");\n  }\n}\nfunction TaskemployeesFormComponent_mat_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", name_r4.firstName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", name_r4.firstName + \" \" + name_r4.lastName, \" \");\n  }\n}\nexport class TaskemployeesFormComponent {\n  constructor(formBuilder, taskService, dialogRef, employeeService) {\n    this.formBuilder = formBuilder;\n    this.taskService = taskService;\n    this.dialogRef = dialogRef;\n    this.employeeService = employeeService;\n    this.selectedFiles = [];\n    this.employees = [];\n    this.taskStatuses = [{\n      value: TaskStatus.Todo,\n      name: 'Todo'\n    }, {\n      value: TaskStatus.Progress,\n      name: 'In Progress'\n    }, {\n      value: TaskStatus.Done,\n      name: 'Done'\n    }];\n    this.title = 'Create Task';\n    this.taskEmployeeForm = this.formBuilder.group({\n      taskCreatedDate: ['', Validators.required],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      timeEstimated: ['', Validators.required],\n      taskStatus: ['', Validators.required],\n      nameEmployee: ['', Validators.required],\n      files: ['']\n    });\n    this.getEmployee();\n  }\n  submit(taskEmployee) {\n    taskEmployee.files = this.selectedFiles;\n    this.taskService.createTaskEmployee(taskEmployee).subscribe();\n    this.dialogRef.close();\n  }\n  getEmployee() {\n    this.employeeService.getEmployeesService('').subscribe(result => {\n      this.employees = result;\n    });\n  }\n  onFileChange(event) {\n    const files = event.target.files;\n    this.selectedFiles = Array.from(files);\n  }\n}\n_class = TaskemployeesFormComponent;\n_class.ɵfac = function TaskemployeesFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskemployeeService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.EmployeeService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-taskemployees-form\"]],\n  decls: 48,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"justify-content-between\", \"p-2\"], [\"mat-dialog-close\", \"\", 1, \"bi\", \"bi-x-circle\", 2, \"font-size\", \"1.5rem\"], [1, \"p-3\", \"m-0\", \"border-0\", \"m-0\", \"border-0\"], [1, \"mb-3\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"taskCreatedDate\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"timeEstimated\", \"required\", \"\"], [\"formControlName\", \"taskStatus\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"nameEmployee\", \"required\", \"\"], [\"formControlName\", \"files\", \"type\", \"file\", \"multiple\", \"\", 1, \"file-upload\", 3, \"change\"], [1, \"d-flex\", \"justify-content-end\", \"p-2\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 2, \"margin-right\", \"8px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function TaskemployeesFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function TaskemployeesFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit(ctx.taskEmployeeForm.value);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"mat-form-field\", 5)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Task Created Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6)(11, \"mat-datepicker-toggle\", 7)(12, \"mat-datepicker\", null, 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"mat-form-field\", 5)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"mat-form-field\", 5)(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"textarea\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 4)(25, \"mat-form-field\", 5)(26, \"mat-label\");\n      i0.ɵɵtext(27, \"Time Estimated (in hours):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 4)(30, \"mat-form-field\", 5)(31, \"mat-label\");\n      i0.ɵɵtext(32, \"Task Status:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"mat-select\", 12);\n      i0.ɵɵtemplate(34, TaskemployeesFormComponent_mat_option_34_Template, 2, 2, \"mat-option\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"div\", 4)(36, \"mat-form-field\", 5)(37, \"mat-label\");\n      i0.ɵɵtext(38, \"Task assigned to:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-select\", 14);\n      i0.ɵɵtemplate(40, TaskemployeesFormComponent_mat_option_40_Template, 2, 2, \"mat-option\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(41, \"div\", 4)(42, \"input\", 15);\n      i0.ɵɵlistener(\"change\", function TaskemployeesFormComponent_Template_input_change_42_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 16)(44, \"button\", 17);\n      i0.ɵɵtext(45, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"button\", 18);\n      i0.ɵɵtext(47, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.taskEmployeeForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"matDatepicker\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r0);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskStatuses);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.taskEmployeeForm.invalid);\n    }\n  },\n  dependencies: [i5.MatDatepicker, i5.MatDatepickerInput, i5.MatDatepickerToggle, i6.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.MatDialogClose, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatSuffix, i9.MatButton, i10.MatSelect, i11.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","TaskStatus","i0","TaskemployeesFormComponent","constructor","formBuilder","taskService","dialogRef","employeeService","value","Todo","name","Progress","Done","taskEmployeeForm","group","taskCreatedDate","required","title","description","timeEstimated","taskStatus","nameEmployee","files","getEmployee","submit","taskEmployee","selectedFiles","createTaskEmployee","subscribe","close","getEmployeesService","result","employees","onFileChange","event","target","Array","from","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\taskemployees\\taskemployees-form\\taskemployees-form.component.ts","D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\taskemployees\\taskemployees-form\\taskemployees-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { clippingParents } from '@popperjs/core';\r\nimport { TaskStatus } from 'src/app/enums/taskStatus';\r\nimport { Employee } from 'src/app/models/employee';\r\nimport { Taskemployee } from 'src/app/models/employeetask';\r\nimport { TaskemployeeCreate } from 'src/app/models/employeetask-create';\r\nimport { EmployeeService } from 'src/app/services/employee.service';\r\nimport { TaskemployeeService } from 'src/app/services/taskemployee.service';\r\n\r\n@Component({\r\n  selector: 'app-taskemployees-form',\r\n  templateUrl: './taskemployees-form.component.html',\r\n  styleUrls: ['./taskemployees-form.component.scss'],\r\n})\r\nexport class TaskemployeesFormComponent {\r\n  taskEmployeeForm: FormGroup;\r\n  selectedFiles: File[] = [];\r\n  employees: Employee[] = [];\r\n\r\n  taskStatuses: { value: TaskStatus; name: string }[] = [\r\n    { value: TaskStatus.Todo, name: 'Todo' },\r\n    { value: TaskStatus.Progress, name: 'In Progress' },\r\n    { value: TaskStatus.Done, name: 'Done' },\r\n  ];\r\n\r\n  title = 'Create Task';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private taskService: TaskemployeeService,\r\n    public dialogRef: MatDialogRef<TaskemployeesFormComponent>,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.taskEmployeeForm = this.formBuilder.group({\r\n      taskCreatedDate: ['', Validators.required],\r\n      title: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      timeEstimated: ['', Validators.required],\r\n      taskStatus: ['', Validators.required],\r\n      nameEmployee: ['', Validators.required],\r\n      files: [''],\r\n    });\r\n\r\n    this.getEmployee();\r\n  }\r\n\r\n  submit(taskEmployee: Taskemployee) {\r\n    taskEmployee.files = this.selectedFiles;\r\n    this.taskService.createTaskEmployee(taskEmployee).subscribe();\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getEmployee() {\r\n    this.employeeService\r\n      .getEmployeesService('')\r\n      .subscribe((result: Employee[]) => {\r\n        this.employees = result;\r\n      });\r\n  }\r\n\r\n  onFileChange(event: any) {\r\n    const files: File[] = event.target.files;\r\n    this.selectedFiles = Array.from(files);\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"taskEmployeeForm\"\r\n  (ngSubmit)=\"submit(taskEmployeeForm.value)\"\r\n>\r\n  <div class=\"d-flex justify-content-between p-2\">\r\n    <h2>{{ title }}</h2>\r\n    <i class=\"bi bi-x-circle\" style=\"font-size: 1.5rem\" mat-dialog-close></i>\r\n  </div>\r\n  <div class=\"p-3 m-0 border-0 m-0 border-0\">\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Task Created Date:</mat-label>\r\n        <input\r\n          matInput\r\n          [matDatepicker]=\"picker\"\r\n          formControlName=\"taskCreatedDate\"\r\n          required\r\n        />\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Title:</mat-label>\r\n        <input matInput formControlName=\"title\" required />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Description:</mat-label>\r\n        <textarea matInput formControlName=\"description\" required></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Time Estimated (in hours):</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          formControlName=\"timeEstimated\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Task Status:</mat-label>\r\n        <mat-select formControlName=\"taskStatus\" required>\r\n          <mat-option\r\n            *ngFor=\"let status of taskStatuses\"\r\n            [value]=\"status.value\"\r\n          >\r\n            {{ status.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Task assigned to:</mat-label>\r\n        <mat-select matInput formControlName=\"nameEmployee\" required>\r\n          <mat-option *ngFor=\"let name of employees\" [value]=\"name.firstName\">\r\n            {{ name.firstName + \" \" + name.lastName }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    <input\r\n      formControlName=\"files\"\r\n      type=\"file\"\r\n      class=\"file-upload\"\r\n      multiple\r\n      (change)=\"onFileChange($event)\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"d-flex justify-content-end p-2\">\r\n    <button style=\"margin-right: 8px\" mat-raised-button mat-dialog-close>\r\n      Cancel\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      [disabled]=\"taskEmployeeForm.invalid\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
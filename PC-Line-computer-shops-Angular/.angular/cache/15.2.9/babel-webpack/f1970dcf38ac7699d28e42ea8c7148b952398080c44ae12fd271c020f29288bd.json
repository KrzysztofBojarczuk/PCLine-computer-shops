{"ast":null,"code":"var _class;\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\nimport { ConfirmationModalComponent } from 'src/app/shared/confirmation-modal/confirmation-modal.component';\nimport { EmployeeUpdateComponent } from '../employee-update/employee-update.component';\nimport { AddEmployeeToShopComponent } from '../add-employee-to-shop/add-employee-to-shop.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/employee.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/table\";\nimport * as i10 from \"@angular/material/button-toggle\";\nimport * as i11 from \"@angular/material/checkbox\";\nfunction EmployeeListComponent_mat_button_toggle_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-button-toggle\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r20.number);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r20.name);\n  }\n}\nfunction EmployeeListComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 23)(1, \"mat-checkbox\", 24);\n    i0.ɵɵlistener(\"change\", function EmployeeListComponent_th_16_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r21.toggleAllRows() : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r1.selection.hasValue() && ctx_r1.isAllSelected())(\"indeterminate\", ctx_r1.selection.hasValue() && !ctx_r1.isAllSelected())(\"aria-label\", ctx_r1.checkboxLabel());\n  }\n}\nfunction EmployeeListComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 25)(1, \"mat-checkbox\", 26);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_td_17_Template_mat_checkbox_click_1_listener($event) {\n      return $event.stopPropagation();\n    })(\"change\", function EmployeeListComponent_td_17_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const row_r23 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r25.selection.toggle(row_r23) : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r23 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r2.selection.isSelected(row_r23))(\"aria-label\", ctx_r2.checkboxLabel(row_r23));\n  }\n}\nfunction EmployeeListComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Id\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r27 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r27.employeeId);\n  }\n}\nfunction EmployeeListComponent_th_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r28 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r28.lastName);\n  }\n}\nfunction EmployeeListComponent_th_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r29.email);\n  }\n}\nfunction EmployeeListComponent_th_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Salary\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r30.salary);\n  }\n}\nfunction EmployeeListComponent_th_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Employee Position\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r31 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.getEmployeePositionName(element_r31.employeePosition), \" \");\n  }\n}\nfunction EmployeeListComponent_th_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Shop Id\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r32 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r32.shopId);\n  }\n}\nfunction EmployeeListComponent_th_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Shop Id\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 25)(1, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_td_38_Template_button_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r35);\n      const element_r33 = restoredCtx.$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      ctx_r34.updateEmployee(element_r33);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵelement(2, \"i\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmployeeListComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 29);\n  }\n}\nfunction EmployeeListComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 30);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_tr_40_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const row_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.selection.toggle(row_r36));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 31)(2, \"h1\");\n    i0.ɵɵtext(3, \" Total salary of all employees: \");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"h1\");\n    i0.ɵɵtext(7, \" Number of employees: \");\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r19.getTotalSalary(), \" USD\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r19.getTotalNumberOfEmployees());\n  }\n}\nexport class EmployeeListComponent {\n  constructor(employeeService, dialog, snackBar) {\n    this.employeeService = employeeService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.displayedColumns = ['select', 'employeeId', 'lastName', 'email', 'salary', 'employeePosition', 'shopId', 'action'];\n    this.selection = new SelectionModel(true, []);\n    this.selectedValues = [];\n    this.value = '';\n    this.employees = [];\n    this.inputDisabled = false;\n    this.employeePosition = [{\n      number: EmployeePosition.Menager,\n      name: \"Menager\"\n    }, {\n      number: EmployeePosition.Seller,\n      name: \"Seller \"\n    }, {\n      number: EmployeePosition.Technician,\n      name: \"Techniciane\"\n    }, {\n      number: EmployeePosition.OfficeWorker,\n      name: \"Office worker\"\n    }, {\n      number: EmployeePosition.Driver,\n      name: \"Driver\"\n    }];\n    this.dataSource = new MatTableDataSource([]);\n  }\n  ngOnInit() {\n    this.getEmployee('');\n  }\n  getTotalSalary() {\n    return this.employees.reduce((total, employee) => total + employee.salary, 0);\n  }\n  getTotalNumberOfEmployees() {\n    return this.employees.length;\n  }\n  getEmployee(searchTerm, selectedValues) {\n    this.employeeService.getEmployeesService(searchTerm, selectedValues).subscribe(result => {\n      this.dataSource = new MatTableDataSource(result);\n      this.employees = result;\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  getEmployeePositionName(enumEmployeePosition) {\n    return EmployeePosition[enumEmployeePosition];\n  }\n  addEmployeeToShop() {\n    const dialogRef = this.dialog.open(AddEmployeeToShopComponent, {\n      width: '900px',\n      height: '700px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.getEmployee('');\n    });\n  }\n  clearSearch() {\n    this.value = '';\n    this.getEmployee('');\n  }\n  onSelectedValuesChange() {\n    this.inputDisabled = this.selectedValues.length > 0;\n    this.getEmployee('', this.selectedValues);\n  }\n  deleteButtonEmployee() {\n    const selectedEmployees = this.selection.selected;\n    if (selectedEmployees.length > 0) {\n      const dialogRef = this.dialog.open(ConfirmationModalComponent, {\n        width: '400px',\n        height: '200px',\n        data: {\n          titleText: \"Delete Employee\",\n          confirmationText: \"Do you really want delete selected Employees?\"\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          for (const employee of selectedEmployees) {\n            this.employeeService.deleteEmployeesService(employee.shopId, employee.employeeId).subscribe(result => {\n              this.snackBar.open('All selected employees deleted successfully', 'Close', {\n                duration: 3000\n              });\n              this.getEmployee('');\n            }, error => {\n              this.snackBar.open('Error deleting employee', 'Close', {\n                duration: 3000,\n                panelClass: ['error-snackbar']\n              });\n            });\n          }\n          this.selection.clear();\n        }\n      });\n    }\n  }\n  deleteEmployee(employee) {\n    this.employeeService.deleteEmployeesService(employee.shopId, employee.employeeId).subscribe();\n  }\n  updateEmployee(employee) {\n    const dialogRef = this.dialog.open(EmployeeUpdateComponent, {\n      width: '400px',\n      height: '650px',\n      data: employee\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.getEmployee('');\n    });\n  }\n  isDeleteButtonDisabled() {\n    return this.selection.isEmpty();\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row) {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.employeeId + 1}`;\n  }\n}\n_class = EmployeeListComponent;\n_class.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-employee-list\"]],\n  decls: 42,\n  vars: 9,\n  consts: [[1, \"d-flex\", \"justify-content-start\", \"m-5\"], [\"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [1, \"col-md-6\"], [1, \"example-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Search\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 2, \"margin-left\", \"10px\", 3, \"click\"], [\"multiple\", \"\", 2, \"margin-left\", \"10px\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"select\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"employeeId\"], [\"matColumnDef\", \"lastName\"], [\"matColumnDef\", \"email\"], [\"matColumnDef\", \"salary\"], [\"matColumnDef\", \"employeePosition\"], [\"matColumnDef\", \"shopId\"], [\"matColumnDef\", \"action\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [4, \"ngIf\"], [3, \"value\"], [\"mat-header-cell\", \"\"], [3, \"checked\", \"indeterminate\", \"aria-label\", \"change\"], [\"mat-cell\", \"\"], [3, \"checked\", \"aria-label\", \"click\", \"change\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"bi\", \"bi-envelope\", 2, \"font-size\", \"1.5rem\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"click\"], [1, \"m-5\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function EmployeeListComponent_Template_button_click_1_listener() {\n        return ctx.deleteButtonEmployee();\n      });\n      i0.ɵɵtext(2, \" Delete Employee \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-form-field\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeListComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.value = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function EmployeeListComponent_Template_button_click_6_listener() {\n        return ctx.getEmployee(ctx.value);\n      });\n      i0.ɵɵtext(7, \" Search \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function EmployeeListComponent_Template_button_click_8_listener() {\n        return ctx.clearSearch();\n      });\n      i0.ɵɵtext(9, \" Clear \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function EmployeeListComponent_Template_button_click_10_listener() {\n        return ctx.addEmployeeToShop();\n      });\n      i0.ɵɵtext(11, \" Add Employee To Shop \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-button-toggle-group\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeListComponent_Template_mat_button_toggle_group_ngModelChange_12_listener($event) {\n        return ctx.selectedValues = $event;\n      })(\"ngModelChange\", function EmployeeListComponent_Template_mat_button_toggle_group_ngModelChange_12_listener() {\n        return ctx.onSelectedValuesChange();\n      });\n      i0.ɵɵtemplate(13, EmployeeListComponent_mat_button_toggle_13_Template, 2, 2, \"mat-button-toggle\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"table\", 8);\n      i0.ɵɵelementContainerStart(15, 9);\n      i0.ɵɵtemplate(16, EmployeeListComponent_th_16_Template, 2, 3, \"th\", 10);\n      i0.ɵɵtemplate(17, EmployeeListComponent_td_17_Template, 2, 2, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(18, 12);\n      i0.ɵɵtemplate(19, EmployeeListComponent_th_19_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(20, EmployeeListComponent_td_20_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(21, 13);\n      i0.ɵɵtemplate(22, EmployeeListComponent_th_22_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(23, EmployeeListComponent_td_23_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(24, 14);\n      i0.ɵɵtemplate(25, EmployeeListComponent_th_25_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(26, EmployeeListComponent_td_26_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(27, 15);\n      i0.ɵɵtemplate(28, EmployeeListComponent_th_28_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(29, EmployeeListComponent_td_29_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(30, 16);\n      i0.ɵɵtemplate(31, EmployeeListComponent_th_31_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(32, EmployeeListComponent_td_32_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(33, 17);\n      i0.ɵɵtemplate(34, EmployeeListComponent_th_34_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(35, EmployeeListComponent_td_35_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(36, 18);\n      i0.ɵɵtemplate(37, EmployeeListComponent_th_37_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(38, EmployeeListComponent_td_38_Template, 3, 0, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(39, EmployeeListComponent_tr_39_Template, 1, 0, \"tr\", 19);\n      i0.ɵɵtemplate(40, EmployeeListComponent_tr_40_Template, 1, 0, \"tr\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(41, EmployeeListComponent_div_41_Template, 10, 2, \"div\", 21);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.isDeleteButtonDisabled());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value)(\"disabled\", ctx.inputDisabled);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedValues);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeePosition);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.employees.length !== 0);\n    }\n  },\n  dependencies: [i4.NgIf, i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i6.MatInput, i7.MatFormField, i5.NgModel, i8.MatButton, i8.MatIconButton, i9.MatTable, i9.MatHeaderCellDef, i9.MatHeaderRowDef, i9.MatColumnDef, i9.MatCellDef, i9.MatRowDef, i9.MatHeaderCell, i9.MatCell, i9.MatHeaderRow, i9.MatRow, i10.MatButtonToggleGroup, i10.MatButtonToggle, i11.MatCheckbox],\n  styles: [\"table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUvZW1wbG95ZWUtdGFibGUvZW1wbG95ZWUtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["MatTableDataSource","SelectionModel","EmployeePosition","ConfirmationModalComponent","EmployeeUpdateComponent","AddEmployeeToShopComponent","i0","ctx_r21","$event","ctx_r25","ctx_r34","EmployeeListComponent","constructor","employeeService","dialog","snackBar","number","Menager","name","Seller","Technician","OfficeWorker","Driver","dataSource","ngOnInit","getEmployee","getTotalSalary","employees","reduce","total","employee","salary","getTotalNumberOfEmployees","length","searchTerm","selectedValues","getEmployeesService","subscribe","result","error","console","getEmployeePositionName","enumEmployeePosition","addEmployeeToShop","dialogRef","open","width","height","afterClosed","clearSearch","value","onSelectedValuesChange","inputDisabled","deleteButtonEmployee","selectedEmployees","selection","selected","data","titleText","confirmationText","deleteEmployeesService","shopId","employeeId","duration","panelClass","clear","deleteEmployee","updateEmployee","isDeleteButtonDisabled","isEmpty","isAllSelected","numSelected","numRows","toggleAllRows","select","checkboxLabel","row","isSelected","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\employee-table\\employee-list.component.ts","D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\employee-table\\employee-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { EmployeeService } from 'src/app/services/employee.service';\r\nimport { Employee } from 'src/app/models/employee';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\r\nimport { ConfirmationModalComponent } from 'src/app/shared/confirmation-modal/confirmation-modal.component';\r\nimport { EmployeeUpdateComponent } from '../employee-update/employee-update.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddEmployeeToShopComponent } from '../add-employee-to-shop/add-employee-to-shop.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.scss']\r\n})\r\nexport class EmployeeListComponent {\r\n\r\n  dataSource: MatTableDataSource<Employee>;\r\n  displayedColumns: string[] = ['select', 'employeeId', 'lastName', 'email', 'salary', 'employeePosition', 'shopId', 'action'];\r\n  selection = new SelectionModel<Employee>(true, []);\r\n\r\n  selectedValues: number[] = [];\r\n\r\n  value: string = '';\r\n\r\n  employees: Employee[] = [];\r\n\r\n  inputDisabled: boolean = false;\r\n\r\n  employeePosition = [\r\n    { number: EmployeePosition.Menager, name: \"Menager\" },\r\n    { number: EmployeePosition.Seller, name: \"Seller \" },\r\n    { number: EmployeePosition.Technician, name: \"Techniciane\" },\r\n    { number: EmployeePosition.OfficeWorker, name: \"Office worker\" },\r\n    { number: EmployeePosition.Driver, name: \"Driver\" }\r\n  ]\r\n\r\n  constructor(private employeeService: EmployeeService, private dialog: MatDialog, private snackBar: MatSnackBar) {\r\n    this.dataSource = new MatTableDataSource<Employee>([])\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getEmployee('');\r\n  }\r\n\r\n  getTotalSalary(): number {\r\n    return this.employees.reduce((total, employee) => total + employee.salary, 0);\r\n  }\r\n\r\n  getTotalNumberOfEmployees(): number {\r\n    return this.employees.length;\r\n  }\r\n\r\n  getEmployee(searchTerm?: string, selectedValues?: number[]) {\r\n    this.employeeService.getEmployeesService(searchTerm, selectedValues).subscribe(\r\n      (result: Employee[]) => {\r\n        this.dataSource = new MatTableDataSource(result);\r\n        this.employees = result;\r\n      },\r\n      error => {\r\n        console.error('Error:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  getEmployeePositionName(enumEmployeePosition: number): string {\r\n    return EmployeePosition[enumEmployeePosition]\r\n  }\r\n\r\n  addEmployeeToShop() {\r\n    const dialogRef = this.dialog.open(AddEmployeeToShopComponent, {\r\n      width: '900px',\r\n      height: '700px',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEmployee('');\r\n    }\r\n    )\r\n  }\r\n\r\n  clearSearch() {\r\n    this.value = '';\r\n    this.getEmployee('');\r\n  }\r\n\r\n  onSelectedValuesChange() {\r\n    this.inputDisabled = this.selectedValues.length > 0;\r\n    this.getEmployee('', this.selectedValues)\r\n  }\r\n\r\n  deleteButtonEmployee() {\r\n    const selectedEmployees = this.selection.selected;\r\n\r\n    if (selectedEmployees.length > 0) {\r\n      const dialogRef = this.dialog.open(ConfirmationModalComponent, {\r\n        width: '400px',\r\n        height: '200px',\r\n        data: {\r\n          titleText: \"Delete Employee\",\r\n          confirmationText: \"Do you really want delete selected Employees?\"\r\n        }\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          for (const employee of selectedEmployees) {\r\n            this.employeeService.deleteEmployeesService(employee.shopId, employee.employeeId).subscribe(\r\n              result => {\r\n                this.snackBar.open('All selected employees deleted successfully', 'Close', {\r\n                  duration: 3000,\r\n                });\r\n                this.getEmployee('');\r\n\r\n              },\r\n              error => {\r\n                this.snackBar.open('Error deleting employee', 'Close', {\r\n                  duration: 3000,\r\n                  panelClass: ['error-snackbar']\r\n                });\r\n              }\r\n            );\r\n          }\r\n          this.selection.clear();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteEmployee(employee: Employee) {\r\n    this.employeeService.deleteEmployeesService(employee.shopId, employee.employeeId).subscribe();\r\n  }\r\n\r\n  updateEmployee(employee: Employee) {\r\n    const dialogRef = this.dialog.open(EmployeeUpdateComponent, {\r\n      width: '400px',\r\n      height: '650px',\r\n      data: employee,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEmployee('');\r\n    }\r\n    )\r\n  }\r\n\r\n  isDeleteButtonDisabled(): boolean {\r\n    return this.selection.isEmpty();\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Employee): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.employeeId + 1}`;\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-start m-5\">\r\n  <button\r\n    mat-raised-button\r\n    (click)=\"deleteButtonEmployee()\"\r\n    [disabled]=\"isDeleteButtonDisabled()\"\r\n  >\r\n    Delete Employee\r\n  </button>\r\n</div>\r\n\r\n<div class=\"col-md-6\">\r\n  <mat-form-field class=\"example-form-field\">\r\n    <input\r\n      matInput\r\n      type=\"text\"\r\n      placeholder=\"Search\"\r\n      [(ngModel)]=\"value\"\r\n      [disabled]=\"inputDisabled\"\r\n    />\r\n  </mat-form-field>\r\n\r\n  <button\r\n    style=\"margin-left: 10px\"\r\n    mat-raised-button\r\n    (click)=\"getEmployee(value)\"\r\n  >\r\n    Search\r\n  </button>\r\n  <button style=\"margin-left: 10px\" mat-raised-button (click)=\"clearSearch()\">\r\n    Clear\r\n  </button>\r\n  <button\r\n    style=\"margin-left: 10px\"\r\n    mat-raised-button\r\n    (click)=\"addEmployeeToShop()\"\r\n  >\r\n    Add Employee To Shop\r\n  </button>\r\n  <mat-button-toggle-group\r\n    multiple\r\n    style=\"margin-left: 10px\"\r\n    [(ngModel)]=\"selectedValues\"\r\n    (ngModelChange)=\"onSelectedValuesChange()\"\r\n  >\r\n    <mat-button-toggle\r\n      *ngFor=\"let item of employeePosition\"\r\n      [value]=\"item.number\"\r\n      >{{ item.name }}</mat-button-toggle\r\n    >\r\n  </mat-button-toggle-group>\r\n</div>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <!-- Checkbox Column -->\r\n  <ng-container matColumnDef=\"select\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      <mat-checkbox\r\n        (change)=\"$event ? toggleAllRows() : null\"\r\n        [checked]=\"selection.hasValue() && isAllSelected()\"\r\n        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n        [aria-label]=\"checkboxLabel()\"\r\n      >\r\n      </mat-checkbox>\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let row\">\r\n      <mat-checkbox\r\n        (click)=\"$event.stopPropagation()\"\r\n        (change)=\"$event ? selection.toggle(row) : null\"\r\n        [checked]=\"selection.isSelected(row)\"\r\n        [aria-label]=\"checkboxLabel(row)\"\r\n      >\r\n      </mat-checkbox>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"employeeId\">\r\n    <th mat-header-cell *matHeaderCellDef>Id</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.employeeId }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"lastName\">\r\n    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.lastName }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"email\">\r\n    <th mat-header-cell *matHeaderCellDef>Email</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"salary\">\r\n    <th mat-header-cell *matHeaderCellDef>Salary</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.salary }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"employeePosition\">\r\n    <th mat-header-cell *matHeaderCellDef>Employee Position</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{ getEmployeePositionName(element.employeePosition) }}\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"shopId\">\r\n    <th mat-header-cell *matHeaderCellDef>Shop Id</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.shopId }}</td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"action\">\r\n    <th mat-header-cell *matHeaderCellDef>Shop Id</th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      <button\r\n        mat-icon-button\r\n        (click)=\"updateEmployee(element); $event.stopPropagation()\"\r\n      >\r\n        <i class=\"bi bi-envelope\" style=\"font-size: 1.5rem\"></i>\r\n      </button>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n    (click)=\"selection.toggle(row)\"\r\n  ></tr>\r\n</table>\r\n\r\n<div *ngIf=\"employees.length !== 0\">\r\n  <div class=\"m-5\">\r\n    <h1>\r\n      Total salary of all employees: <b>{{ getTotalSalary() }} USD</b>\r\n    </h1>\r\n    <h1>\r\n      Number of employees: <b>{{ getTotalNumberOfEmployees() }}</b>\r\n    </h1>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
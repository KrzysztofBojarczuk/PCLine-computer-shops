{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7068/api/Employee/';\n  }\n  getNumberOfEmployeeService() {\n    return this.http.get(this.apiUrl + 'GetNumberOfEmployees');\n  }\n  getEmployeesService(searchTerm, selectedEmployees) {\n    return this.http.get(`${this.apiUrl}?searchTerm=${searchTerm}&${selectedEmployees?.map(employee => `enumEmployeePosition=${employee}`).join('&')}`);\n  }\n  deleteEmployeesService(shopId, employeeId) {\n    return this.http.delete(`${this.apiUrl}${shopId}/employee/${employeeId}`);\n  }\n  postEmployeeForShopService(shopId, employee) {\n    return this.http.post(`${this.apiUrl}${shopId}`, employee);\n  }\n  updateEmployeeService(shopId, employeeId, updatedEmployee) {\n    return this.http.put(`${this.apiUrl}${shopId}/${employeeId}`, updatedEmployee);\n  }\n}\n_class = EmployeeService;\n_class.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,sCAAsC;EAEhB;EAEvCC,0BAA0B;IACxB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,MAAM,GAAG,sBAAsB,CAAC;EACpE;EAEAC,mBAAmB,CACjBC,UAAmB,EACnBC,iBAA4B;IAE5B,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAClB,GAAG,IAAI,CAACC,MAAM,eAAeE,UAAU,IAAIC,iBAAiB,EACxDC,GAAG,CAAEC,QAAQ,IAAK,wBAAwBA,QAAQ,EAAE,CAAC,CACtDC,IAAI,CAAC,GAAG,CAAC,EAAE,CACf;EACH;EAEAC,sBAAsB,CAACC,MAAc,EAAEC,UAAkB;IACvD,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CACrB,GAAG,IAAI,CAACV,MAAM,GAAGQ,MAAM,aAAaC,UAAU,EAAE,CACjD;EACH;EAEAE,0BAA0B,CACxBH,MAAc,EACdH,QAAwB;IAExB,OAAO,IAAI,CAACR,IAAI,CAACe,IAAI,CAAW,GAAG,IAAI,CAACZ,MAAM,GAAGQ,MAAM,EAAE,EAAEH,QAAQ,CAAC;EACtE;EAEAQ,qBAAqB,CACnBL,MAAc,EACdC,UAAkB,EAClBK,eAA+B;IAE/B,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAClB,GAAG,IAAI,CAACf,MAAM,GAAGQ,MAAM,IAAIC,UAAU,EAAE,EACvCK,eAAe,CAChB;EACH;;SA1CWnB,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAqB,SAAfrB,MAAe;EAAAsB,YAFd;AAAM","names":["EmployeeService","constructor","http","getNumberOfEmployeeService","get","apiUrl","getEmployeesService","searchTerm","selectedEmployees","map","employee","join","deleteEmployeesService","shopId","employeeId","delete","postEmployeeForShopService","post","updateEmployeeService","updatedEmployee","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models/employee';\r\nimport { EmployeeCreate } from '../models/employee-create';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeeService {\r\n  private apiUrl = 'https://localhost:7068/api/Employee/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getNumberOfEmployeeService(): Observable<number> {\r\n    return this.http.get<number>(this.apiUrl + 'GetNumberOfEmployees');\r\n  }\r\n\r\n  getEmployeesService(\r\n    searchTerm?: string,\r\n    selectedEmployees?: number[]\r\n  ): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>(\r\n      `${this.apiUrl}?searchTerm=${searchTerm}&${selectedEmployees\r\n        ?.map((employee) => `enumEmployeePosition=${employee}`)\r\n        .join('&')}`\r\n    );\r\n  }\r\n\r\n  deleteEmployeesService(shopId: number, employeeId: number): Observable<void> {\r\n    return this.http.delete<void>(\r\n      `${this.apiUrl}${shopId}/employee/${employeeId}`\r\n    );\r\n  }\r\n\r\n  postEmployeeForShopService(\r\n    shopId: number,\r\n    employee: EmployeeCreate\r\n  ): Observable<Employee> {\r\n    return this.http.post<Employee>(`${this.apiUrl}${shopId}`, employee);\r\n  }\r\n\r\n  updateEmployeeService(\r\n    shopId: number,\r\n    employeeId: number,\r\n    updatedEmployee: EmployeeCreate\r\n  ): Observable<EmployeeCreate> {\r\n    return this.http.put<EmployeeCreate>(\r\n      `${this.apiUrl}${shopId}/${employeeId}`,\r\n      updatedEmployee\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
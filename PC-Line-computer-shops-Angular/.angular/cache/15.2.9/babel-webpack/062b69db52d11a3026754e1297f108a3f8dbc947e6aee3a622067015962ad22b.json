{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/shop.service\";\nimport * as i3 from \"src/app/services/employee.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nfunction AddEmployeeToShopComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const shop_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", shop_r2.shopId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(shop_r2.shopId);\n  }\n}\nfunction AddEmployeeToShopComponent_mat_option_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const position_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", position_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", position_r3.nameOfposition, \" \");\n  }\n}\nexport class AddEmployeeToShopComponent {\n  constructor(fb, shopService, employeeService, dialogRef) {\n    this.fb = fb;\n    this.shopService = shopService;\n    this.employeeService = employeeService;\n    this.dialogRef = dialogRef;\n    this.shops = [];\n    this.employeePosition = [{\n      value: EmployeePosition.Menager,\n      nameOfposition: 'Menager'\n    }, {\n      value: EmployeePosition.Seller,\n      nameOfposition: 'Seller'\n    }, {\n      value: EmployeePosition.Technician,\n      nameOfposition: 'Technician'\n    }, {\n      value: EmployeePosition.OfficeWorker,\n      nameOfposition: 'Office Worker'\n    }, {\n      value: EmployeePosition.Driver,\n      nameOfposition: 'Driver'\n    }];\n    this.shopForm = this.fb.group({\n      shopId: ['', Validators.required],\n      name: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      startDate: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      country: [{\n        value: '',\n        disabled: true\n      }, Validators.required]\n    });\n    this.employeeForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      salary: [null, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      employeePosition: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.getShops();\n  }\n  getShops() {\n    this.shopService.getShopForProduct().subscribe(result => {\n      this.shops = result;\n    }, error => {\n      console.error('Błąd podczas pobierania produktów:', error);\n    });\n  }\n  onShopIdChange(event) {\n    const selectedShopId = event.value;\n    const selectedShop = this.shops.find(shop => shop.shopId === selectedShopId);\n    if (selectedShop) {\n      this.shopForm.patchValue({\n        name: selectedShop.name,\n        startDate: selectedShop.startDate,\n        country: selectedShop.country\n      });\n    }\n  }\n  submit(shopId, employee) {\n    this.employeeService.postEmployeeForShopService(shopId, employee).subscribe(res => {\n      this.dialogRef.close();\n    });\n  }\n}\n_class = AddEmployeeToShopComponent;\n_class.ɵfac = function AddEmployeeToShopComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ShopService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-employee-to-shop\"]],\n  decls: 65,\n  vars: 5,\n  consts: [[1, \"d-flex\", \"justify-content-between\", \"p-2\"], [\"mat-dialog-close\", \"\", 1, \"bi\", \"bi-x-circle\", 2, \"font-size\", \"1.5rem\"], [1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-6\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"formControlName\", \"shopId\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"formControlName\", \"startDate\"], [\"matInput\", \"\", \"formControlName\", \"country\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"p-3\", \"m-0\", \"border-0\", \"m-0\", \"border-0\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"salary\", \"type\", \"number\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"formControlName\", \"employeePosition\", \"required\", \"\"], [1, \"d-flex\", \"justify-content-end\", \"p-2\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 2, \"margin-right\", \"8px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function AddEmployeeToShopComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Employee To Shop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"i\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5)(8, \"h1\");\n      i0.ɵɵtext(9, \"Choose Shop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Select Shop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-select\", 7);\n      i0.ɵɵlistener(\"selectionChange\", function AddEmployeeToShopComponent_Template_mat_select_selectionChange_14_listener($event) {\n        return ctx.onShopIdChange($event);\n      });\n      i0.ɵɵtemplate(15, AddEmployeeToShopComponent_mat_option_15_Template, 2, 2, \"mat-option\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"mat-form-field\")(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"mat-form-field\")(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 6)(27, \"mat-form-field\")(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 11);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(31, \"div\", 4)(32, \"form\", 12);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEmployeeToShopComponent_Template_form_ngSubmit_32_listener() {\n        let tmp_b_0;\n        return ctx.submit((tmp_b_0 = ctx.shopForm.get(\"shopId\")) == null ? null : tmp_b_0.value, ctx.employeeForm.value);\n      });\n      i0.ɵɵelementStart(33, \"div\", 13)(34, \"div\", 6)(35, \"mat-form-field\", 14)(36, \"mat-label\");\n      i0.ɵɵtext(37, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 6)(40, \"mat-form-field\", 14)(41, \"mat-label\");\n      i0.ɵɵtext(42, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 6)(45, \"mat-form-field\", 14)(46, \"mat-label\");\n      i0.ɵɵtext(47, \"Salary:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 6)(50, \"mat-form-field\", 14)(51, \"mat-label\");\n      i0.ɵɵtext(52, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 6)(55, \"mat-form-field\", 14)(56, \"mat-label\");\n      i0.ɵɵtext(57, \"Employee Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"mat-select\", 19);\n      i0.ɵɵtemplate(59, AddEmployeeToShopComponent_mat_option_59_Template, 2, 2, \"mat-option\", 8);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(60, \"div\", 20)(61, \"button\", 21);\n      i0.ɵɵtext(62, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"button\", 22);\n      i0.ɵɵtext(64, \" Submit \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_4_0;\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.shopForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.shops);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeePosition);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.employeeForm.invalid || !((tmp_4_0 = ctx.shopForm.get(\"shopId\")) == null ? null : tmp_4_0.value));\n    }\n  },\n  dependencies: [i5.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.MatDialogClose, i6.MatInput, i7.MatFormField, i7.MatLabel, i8.MatButton, i9.MatSelect, i10.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","EmployeePosition","i0","AddEmployeeToShopComponent","constructor","fb","shopService","employeeService","dialogRef","value","Menager","nameOfposition","Seller","Technician","OfficeWorker","Driver","shopForm","group","shopId","required","name","disabled","startDate","country","employeeForm","firstName","lastName","salary","email","employeePosition","ngOnInit","getShops","getShopForProduct","subscribe","result","shops","error","console","onShopIdChange","event","selectedShopId","selectedShop","find","shop","patchValue","submit","employee","postEmployeeForShopService","res","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\add-employee-to-shop\\add-employee-to-shop.component.ts","D:\\Projects\\PC-Line-computer-shops-Angular\\src\\app\\employee\\add-employee-to-shop\\add-employee-to-shop.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { EmployeePosition } from 'src/app/enums/employeePosition ';\r\nimport { Employee } from 'src/app/models/employee';\r\nimport { EmployeeCreate } from 'src/app/models/employee-create';\r\nimport { Shop } from 'src/app/models/shop';\r\nimport { EmployeeService } from 'src/app/services/employee.service';\r\nimport { ShopService } from 'src/app/services/shop.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employee-to-shop',\r\n  templateUrl: './add-employee-to-shop.component.html',\r\n  styleUrls: ['./add-employee-to-shop.component.scss'],\r\n})\r\nexport class AddEmployeeToShopComponent {\r\n  employeeForm: FormGroup;\r\n  shopForm: FormGroup;\r\n  shops: Shop[] = [];\r\n\r\n  employeePosition: { value: number; nameOfposition: string }[] = [\r\n    { value: EmployeePosition.Menager, nameOfposition: 'Menager' },\r\n    { value: EmployeePosition.Seller, nameOfposition: 'Seller' },\r\n    { value: EmployeePosition.Technician, nameOfposition: 'Technician' },\r\n    { value: EmployeePosition.OfficeWorker, nameOfposition: 'Office Worker' },\r\n    { value: EmployeePosition.Driver, nameOfposition: 'Driver' },\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private shopService: ShopService,\r\n    private employeeService: EmployeeService,\r\n    private dialogRef: MatDialogRef<void>\r\n  ) {\r\n    this.shopForm = this.fb.group({\r\n      shopId: ['', Validators.required],\r\n      name: [{ value: '', disabled: true }, Validators.required],\r\n      startDate: [{ value: '', disabled: true }, Validators.required],\r\n      country: [{ value: '', disabled: true }, Validators.required],\r\n    });\r\n\r\n    this.employeeForm = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      salary: [null, Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      employeePosition: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getShops();\r\n  }\r\n\r\n  getShops() {\r\n    this.shopService.getShopForProduct().subscribe(\r\n      (result: Shop[]) => {\r\n        this.shops = result;\r\n      },\r\n      (error) => {\r\n        console.error('Błąd podczas pobierania produktów:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onShopIdChange(event: MatSelectChange) {\r\n    const selectedShopId = event.value;\r\n    const selectedShop = this.shops.find(\r\n      (shop) => shop.shopId === selectedShopId\r\n    );\r\n\r\n    if (selectedShop) {\r\n      this.shopForm.patchValue({\r\n        name: selectedShop.name,\r\n        startDate: selectedShop.startDate,\r\n        country: selectedShop.country,\r\n      });\r\n    }\r\n  }\r\n\r\n  submit(shopId: number, employee: EmployeeCreate) {\r\n    this.employeeService\r\n      .postEmployeeForShopService(shopId, employee)\r\n      .subscribe((res) => {\r\n        this.dialogRef.close();\r\n      });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-between p-2\">\r\n  <h2>Add Employee To Shop</h2>\r\n  <i class=\"bi bi-x-circle\" style=\"font-size: 1.5rem\" mat-dialog-close></i>\r\n</div>\r\n<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <form [formGroup]=\"shopForm\">\r\n        <h1>Choose Shop</h1>\r\n        <div class=\"mb-3\">\r\n          <mat-form-field>\r\n            <mat-label>Select Shop</mat-label>\r\n            <mat-select\r\n              formControlName=\"shopId\"\r\n              (selectionChange)=\"onShopIdChange($event)\"\r\n            >\r\n              <mat-option *ngFor=\"let shop of shops\" [value]=\"shop.shopId\">{{\r\n                shop.shopId\r\n              }}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <mat-form-field>\r\n            <mat-label>Name</mat-label>\r\n            <input matInput formControlName=\"name\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <mat-form-field>\r\n            <mat-label>Start Date</mat-label>\r\n            <input matInput formControlName=\"startDate\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <mat-form-field>\r\n            <mat-label>Country</mat-label>\r\n            <input matInput formControlName=\"country\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <form\r\n        [formGroup]=\"employeeForm\"\r\n        (ngSubmit)=\"submit(shopForm.get('shopId')?.value, employeeForm.value)\"\r\n      >\r\n        <div class=\"p-3 m-0 border-0 m-0 border-0\">\r\n          <div class=\"mb-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>First Name:</mat-label>\r\n              <input matInput formControlName=\"firstName\" required />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Last Name:</mat-label>\r\n              <input matInput formControlName=\"lastName\" required />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Salary:</mat-label>\r\n              <input matInput formControlName=\"salary\" type=\"number\" required />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Email:</mat-label>\r\n              <input matInput formControlName=\"email\" required />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>Employee Position</mat-label>\r\n              <mat-select formControlName=\"employeePosition\" required>\r\n                <mat-option\r\n                  *ngFor=\"let position of employeePosition\"\r\n                  [value]=\"position.value\"\r\n                >\r\n                  {{ position.nameOfposition }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-end p-2\">\r\n          <button style=\"margin-right: 8px\" mat-raised-button mat-dialog-close>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            [disabled]=\"employeeForm.invalid || !shopForm.get('shopId')?.value\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}